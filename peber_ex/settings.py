# coding=utf-8
"""
Django settings for peber_ex project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

# Suppress deprecation
import logging
import copy
from django.utils.log import DEFAULT_LOGGING


# DJCelery config (Oct 22)
import djcelery

djcelery.setup_loader()


# Trying import crontab (Oct 22)
# from celery.schedules import crontab

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&(+2vh#86s43xvr9n+#$h^*&#b!*e40$(46)nd$s(8h@&2g@a1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '192.168.56.1', '192.168.1.102', '192.168.1.101']


# Application definition

INSTALLED_APPS = (
	'flat',
	'django.contrib.admin',  # Keperluan peber_web/admin.py
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.humanize',
	'peber_web.migrations',
	'peber_web',
	'djcelery',
	'rest_framework',  # API RESt Pengganti Tastypie
)

MIDDLEWARE_CLASSES = (
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'peber_ex.urls'  # File url config utk parent dir

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Akses template tampilan admin
		'APP_DIRS': True,
		'OPTIONS': {
			'debug': DEBUG,
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'peber_ex.wsgi.application'

# Extending user (Mike Hibbert)
AUTH_PROFILE_MODULE = 'userprofile.UserProfile'

# Django RF (18 Nop)
REST_FRAMEWORK = {
	# Use Django's standard `django.contrib.auth` permissions,
	# or allow read-only access for unauthenticated users.
	'DEFAULT_AUTHENTICATION_CLASSES': (
		'rest_framework.authentication.TokenAuthentication',  # 'rest_framework.permissions.IsAdminUser',
	),
	'DEFAULT_PERMISSION_CLASSES': (
		'rest_framework.permissions.AllowAny',
	),
	'PAGE_SIZE': 10,
	# 'DATETIME_FORMAT': "%Y-%m-%d"  # Format tanggal MySQL
}


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# MySQL Database Setting
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'peber',
#         'USER': 'root',
#         'PASSWORD': 'root',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }

# Database sementara pada SQLite
# DATABASES = {
# 	'default': {
# 		'ENGINE': 'django.db.backends.sqlite3',
# 		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
# 	}
# }

# PostgreSQL database setting
DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql_psycopg2',
		# Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
		'NAME': 'peber',  # Or path to database file if using sqlite3.
		# The following settings are not used with sqlite3:
		'USER': 'root',
		'PASSWORD': 'root',
		'HOST': 'localhost',  # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
		'PORT': '5432',  # Set to empty string for default.
	}
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = ''
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'peber_web', 'static'),)

# TEMPLATE_DEBUG = True

# Utk file upload. Relatif ke direktori dasar.
MEDIA_ROOT = os.path.join(BASE_DIR, 'peber_web', 'media')  # Folder relatif dari root folder (manage.py)
MEDIA_URL = '/media/'  # Hanya untuk keperluan URL naming convention

# Untuk app userprofile
# AUTH_PROFILE_MODULE = 'userprofile.UserProfile'


# Suppress deprecation 
LOGGING = copy.deepcopy(DEFAULT_LOGGING)
LOGGING['filters']['suppress_deprecated'] = {
	'()': 'peber_ex.settings.SuppressDeprecated'
}
LOGGING['handlers']['console']['filters'].append('suppress_deprecated')


class SuppressDeprecated(logging.Filter):
	def filter(self, record):
		# noinspection PyPep8Naming
		WARNINGS_TO_SUPPRESS = [
			# 'RemovedInDjango18Warning',
			'RemovedInDjango19Warning'
		]
		# Return false to suppress message.
		return not any([warn in record.getMessage() for warn in WARNINGS_TO_SUPPRESS])
